{"version":3,"file":"static/js/458.6f966c26.chunk.js","mappings":"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","sources":["components/common/ToolTip.js","components/form/Input.js","components/form/Select.js","features/user-panel/components/Container.js","layouts/user-panel/Sidebar.js","hooks/useWindowDimensions.js","features/user-panel/components/Modal.js","layouts/user-panel/Topbar.js","layouts/user-panel/UserPanelSkeleton.js","features/user-panel/components/Pagination.js","features/user-panel/components/DataTable.js","features/user-panel/pages/Schedule.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","utilities/FormValidate.js","features/user-panel/components/form/UserUpdateForm.js","features/user-panel/pages/Settings.js","pages/UserPanel.js"],"sourcesContent":["export default function ToolTip({ title, classes = '' }) {\r\n    return (\r\n        <span\r\n            className={[\r\n                'group-hover:opacity-100 transition-opacity bg-gray-800 px-4 py-2 text-sm text-gray-100 rounded-sm absolute left-1/2 -translate-x-1/2 translate-y-full opacity-0 mx-auto z-50',\r\n                classes,\r\n            ].join(' ')}\r\n        >\r\n            {title}\r\n        </span>\r\n    );\r\n}\r\n","import { classNames } from '../../utilities/utilities';\r\nimport ToolTip from '../common/ToolTip';\r\n\r\nexport default function Input({\r\n    label,\r\n    type = 'text',\r\n    name,\r\n    value = '',\r\n    placeholder = '',\r\n    classes = '',\r\n    required = false,\r\n    readOnly = false,\r\n    onBlur = null,\r\n    onChange = null,\r\n    toolTip = '',\r\n    validate = null,\r\n    toolTipCss = '',\r\n    errObj = { type: 'red-700', message: '', isFormSubmitted: false, fieldName: 'name' }\r\n}) {\r\n    return errObj.isFormSubmitted ? (\r\n        <>\r\n            <div className=\"group flex relative\">\r\n                {label && (\r\n                    <label\r\n                        className=\"inline-flex mt-1 text-gray-500 whitespace-nowrap\"\r\n                        htmlFor=\"input-field\"\r\n                    >\r\n                        {label}\r\n                    </label>\r\n                )}\r\n                <div>\r\n                    <input\r\n                        type={type}\r\n                        name={name}\r\n                        id={name}\r\n                        value={value}\r\n                        required={required}\r\n                        readOnly={readOnly}\r\n                        autoComplete=\"off\"\r\n                        placeholder={placeholder}\r\n                        className={classNames(\r\n                            'block rounded-md !border-gray-300 shadow-sm sm:text-sm',\r\n                            classes\r\n                        )}\r\n                        onChange={onChange && onChange}\r\n                        onBlur={onBlur && onBlur}\r\n                    />\r\n                    {errObj.isFormSubmitted && errObj.message && <p className={'ml-4 text-' + errObj.type + \" \" + errObj.fieldName}>{errObj.message}</p>}\r\n                </div>\r\n                {toolTip && <ToolTip classes={toolTipCss} title={toolTip} />}\r\n            </div>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div className=\"group flex\">\r\n                {label && (\r\n                    <label\r\n                        className=\"inline-flex mt-1 text-gray-500 whitespace-nowrap\"\r\n                        htmlFor=\"input-field\"\r\n                    >\r\n                        {label}\r\n                    </label>\r\n                )}\r\n                <input\r\n                    type={type}\r\n                    name={name}\r\n                    id={name}\r\n                    value={value}\r\n                    required={required}\r\n                    readOnly={readOnly}\r\n                    autoComplete=\"off\"\r\n                    placeholder={placeholder}\r\n                    className={classNames(\r\n                        'block rounded-md !border-gray-300 shadow-sm sm:text-sm',\r\n                        classes\r\n                    )}\r\n                    onChange={onChange && onChange}\r\n                    onBlur={onBlur && onBlur}\r\n                />\r\n            </div>\r\n            {toolTip && <ToolTip classes={toolTipCss} title={toolTip} />}\r\n        </>\r\n    );\r\n}\r\n","import { classNames } from '../../utilities/utilities';\r\n\r\nexport default function Select({\r\n    id,\r\n    name,\r\n    selected,\r\n    options = [],\r\n    classes,\r\n    defaultValue = '',\r\n    value = '',\r\n    defaultOption = 'Select value',\r\n    addDefaultOption = true,\r\n    required = true,\r\n    onChange = null,\r\n}) {\r\n    return (\r\n        <select\r\n            id={id ? id : name}\r\n            name={name}\r\n            onChange={onChange && onChange}\r\n            autoComplete=\"on\"\r\n            value={value}\r\n            required={required}\r\n            className={classNames(\r\n                'ctx-block ctx-rounded-md  !ctx-border-gray-300 ctx-shadow-sm focus:!ctx-border-gray-900  sm:ctx-text-sm ',\r\n                classes\r\n            )}\r\n        >\r\n            {addDefaultOption && <option value={defaultValue}>{defaultOption}</option>}\r\n            {options.length\r\n                ? typeof options[0] == 'string'\r\n                    ? getArrayOptions(options, selected)\r\n                    : getGroupDropdown(options, selected)\r\n                : getObjectOptions(options, selected)}\r\n        </select>\r\n    );\r\n}\r\n\r\nfunction getGroupDropdown(options, selected) {\r\n    if (!Object.values(options)[0].hasOwnProperty('optionGroup')) {\r\n        return getObjectOptions(options, selected);\r\n    }\r\n\r\n    return Object.values(options).map((optionGroup, i) => {\r\n        {\r\n            return optionGroup.hasOwnProperty('optionGroup') ? (\r\n                <optgroup label={optionGroup.optionGroup} key={i}>\r\n                    {Object.keys(optionGroup.options).map(\r\n                        (optionName, index) => {\r\n                            let currentOption = optionGroup.options[optionName];\r\n                            return (\r\n                                <option key={index} value={optionName}>\r\n                                    {' '}\r\n                                    {currentOption}{' '}\r\n                                </option>\r\n                            );\r\n                        }\r\n                    )}\r\n                </optgroup>\r\n            ) : null;\r\n        }\r\n    });\r\n}\r\n\r\nfunction getObjectOptions(options, selected) {\r\n    return Object.keys(options).map((key, index) => {\r\n        return (\r\n            <option key={index} value={options[key]._id}>\r\n                {' '}\r\n                {options[key].name}{' '}\r\n            </option>\r\n        );\r\n    });\r\n}\r\n\r\nfunction getArrayOptions(options, selected) {\r\n    return options.map((option, index) => {\r\n        return (\r\n            <option key={index} value={option}>\r\n                {' '}\r\n                {option.slice(0, 1).toUpperCase() + option.slice(1, option.length)}{' '}\r\n            </option>\r\n        );\r\n    });\r\n}\r\n","import React from 'react';\r\n\r\nconst Container = ({ children }) => {\r\n    return <div className=\"p-4 min-h-full max-w-7xl mx-auto\">{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserPanelMenus } from '../../data/database';\r\n\r\nconst menus = UserPanelMenus;\r\n\r\nconst Sidebar = ({ closeModal }) => {\r\n    const commonStyle =\r\n        'w-full py-1 px-2 flex items-center gap-2 font-semibold ';\r\n    const inactiveStyle =\r\n        commonStyle + ' text-gray-800/80 hover:bg-themeColor/10 rounded-md';\r\n    const activeStyle = commonStyle + ' bg-themeColor text-white rounded-md';\r\n    return (\r\n        <div className=\"m-4\">\r\n            <ul className=\"flex flex-col gap-1\">\r\n                {menus.map(({ name, link, Icon }) => (\r\n                    <li key={name} className=\"flex\">\r\n                        <NavLink\r\n                            to={link}\r\n                            className={({ isActive }) =>\r\n                                isActive ? activeStyle : inactiveStyle\r\n                            }\r\n                            onClick={closeModal}\r\n                        >\r\n                            <Icon />\r\n                            <p>{name}</p>\r\n                        </NavLink>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n}\r\n\r\nconst useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(\r\n        getWindowDimensions()\r\n    );\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n};\r\n\r\nexport default useWindowDimensions;\r\n","import ReactDom from 'react-dom';\r\n\r\nconst Modal = ({\r\n    open,\r\n    setOpen,\r\n    children,\r\n    variant = 'normal',\r\n    extraClasses = '',\r\n}) => {\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let normalStyle = `z-[1000] fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-w-fit min-h-fit bg-white ${extraClasses} ${\r\n        !open ? 'hidden' : ''\r\n    }`;\r\n\r\n    let sidebarStyle = `z-[1000] fixed top-0 left-0 bg-white ${\r\n        open ? 'open-sidebar' : 'close-sidebar'\r\n    } min-w-min min-h-screen ${\r\n        open ? '' : 'border-r border-gray-700/50'\r\n    } ${extraClasses}`;\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n            {open && (\r\n                <div\r\n                    className=\"fixed inset-0 bg-gray-900/70 z-[999]\"\r\n                    onClick={handleClose}\r\n                />\r\n            )}\r\n\r\n            <div\r\n                className={\r\n                    variant === 'normal'\r\n                        ? normalStyle\r\n                        : variant === 'sidebar'\r\n                        ? sidebarStyle\r\n                        : extraClasses\r\n                }\r\n            >\r\n                {children}\r\n            </div>\r\n        </>,\r\n        document.getElementById('dashboard-portal')\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { logOut } from '../../store/usersSlice';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\nimport Modal from '../../features/user-panel/components/Modal';\r\nimport Sidebar from './Sidebar';\r\nimport { Menu } from '../../assets/atlasIcons/AtlasIconsSolid';\r\n\r\nconst Topbar = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [render, setRender] = useState(false);\r\n    const { width } = useWindowDimensions();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const openModal = () => {\r\n        !render && setRender(true);\r\n        setOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open && width >= 640) {\r\n            closeModal();\r\n        }\r\n    }, [open, width]);\r\n\r\n    const userLogout = (e) => {\r\n        e.preventDefault();\r\n        alert('Are you sure?');\r\n        console.log('after are you sure');\r\n        dispatch(logOut());\r\n        navigate('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"h-full flex items-center justify-between px-4  drop-shadow-md border-b border-gray-400/20 backdrop-blur\">\r\n            <Link\r\n                to=\"/\"\r\n                className=\"flex flex-shrink-0 items-center  text-black font-medium\"\r\n            >\r\n                <div className=\"flex flex-shrink-0 items-center  text-black font-medium\">\r\n                    <img\r\n                        className=\"block h-10 w-auto lg:hidden\"\r\n                        src={`${process.env.REACT_APP_URL}/assets/front/images/mindtoheart.ogo.png`}\r\n                        alt=\"Mind To Heart\"\r\n                    />\r\n                    <img\r\n                        className=\"hidden h-8 w-auto lg:block\"\r\n                        src={`${process.env.REACT_APP_URL}/assets/front/images/mindtoheart.ogo.png`}\r\n                        alt=\"Mind To Heart\"\r\n                    />\r\n                    Mind To Heart\r\n                </div>\r\n            </Link>\r\n            {/* </Link> */}\r\n            <div className=\"flex gap-2.5\">\r\n                <Link\r\n                    role=\"button\"\r\n                    className=\" text-black hover:text-white hover:bg-themeColor px-3 py-2 text-sm font-medium cursor-pointer\"\r\n                    onClick={(e) => userLogout(e)}\r\n                >\r\n                    Logout\r\n                </Link>\r\n\r\n                <button className=\"block sm:hidden\" onClick={openModal}>\r\n                    <Menu />\r\n                </button>\r\n            </div>\r\n\r\n            {render && (\r\n                <Modal open={open} setOpen={setOpen} variant=\"sidebar\">\r\n                    <Sidebar closeModal={closeModal} />\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Topbar;\r\n","import { Outlet } from 'react-router-dom';\r\nimport Container from '../../features/user-panel/components/Container';\r\nimport Sidebar from './Sidebar';\r\nimport Topbar from './Topbar';\r\n\r\nconst UserPanelSkeleton = () => {\r\n    return (\r\n        <div className=\"min-h-screen relative\">\r\n            <div className=\"h-14 sticky top-0\">\r\n                <Topbar />\r\n            </div>\r\n            <div className=\"flex\">\r\n                <div className=\"hidden sm:block border-r border-gray-300 drop-shadow-lg sticky top-14 h-[calc(100vh-56px)] overflow-y-auto\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"overflow-x-auto flex-1\">\r\n                    <Container>\r\n                        <Outlet />\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPanelSkeleton;\r\n","const Pagination = ({\r\n    pageNumbers,\r\n    currentPage,\r\n    setCurrentPage,\r\n    setIndexOfFirstRow,\r\n    setIndexOfLastRow,\r\n    rowsPerPage,\r\n}) => {\r\n    const pageCommonStyle =\r\n        'px-3 h-full flex items-center rounded-sm font-semibold';\r\n    const pageActiveStyle = 'bg-themeColor text-white hover:bg-themeColor ';\r\n    const pageInactiveStyle = 'hover:bg-themeColor/30 cursor-pointer';\r\n\r\n    const arrowCommonStyle =\r\n        'text-3xl px-3 pb-1.5 h-full flex items-center cursor-pointer hover:bg-themeColor/30 rounded-sm';\r\n    const arrowDisabledStyle =\r\n        'cursor-default text-gray-400 hover:bg-transparent';\r\n\r\n    return (\r\n        <div className=\"flex h-8 gap-[1px] text-gray-800\">\r\n            <div className=\"flex gap-[1px] h-full\">\r\n                <div\r\n                    className={`${arrowCommonStyle} ${currentPage === 1 ? arrowDisabledStyle : ''\r\n                        }`}\r\n                    onClick={() => {\r\n                        if (currentPage > 1) {\r\n                            setIndexOfFirstRow(0);\r\n                            setIndexOfLastRow(rowsPerPage);\r\n\r\n                            setCurrentPage(1);\r\n                        }\r\n                    }}\r\n                >\r\n                    &laquo;\r\n                </div>\r\n                <div\r\n                    className={`${arrowCommonStyle} ${currentPage === 1 ? arrowDisabledStyle : ''\r\n                        }`}\r\n                    onClick={() => {\r\n                        if (currentPage > 1) {\r\n                            setIndexOfFirstRow((prev) => prev - rowsPerPage);\r\n                            setIndexOfLastRow((prev) => prev - rowsPerPage);\r\n\r\n                            setCurrentPage((prev) => prev - 1);\r\n                        }\r\n                    }}\r\n                >\r\n                    &lsaquo;\r\n                </div>\r\n            </div>\r\n            <div className=\"flex gap-[1px]\">\r\n                <div\r\n                    className={`pt-1 ${currentPage === pageNumbers.length &&\r\n                            pageNumbers.length > 2\r\n                            ? ''\r\n                            : 'hidden'\r\n                        }`}\r\n                >\r\n                    ...\r\n                </div>\r\n                {pageNumbers.map((page) => {\r\n                    return (\r\n                        <div\r\n                            key={page}\r\n                            className={`${pageCommonStyle} ${page === currentPage\r\n                                    ? pageActiveStyle\r\n                                    : pageInactiveStyle\r\n                                } ${page > currentPage + 1 ? 'hidden' : ''} ${page < currentPage - 1 ? 'hidden' : ''\r\n                                }`}\r\n                            onClick={() => {\r\n                                if (currentPage !== page) {\r\n                                    if (currentPage < page) {\r\n                                        setIndexOfFirstRow(\r\n                                            (prev) =>\r\n                                                prev +\r\n                                                rowsPerPage *\r\n                                                (page - currentPage)\r\n                                        );\r\n                                        setIndexOfLastRow(\r\n                                            (prev) =>\r\n                                                prev +\r\n                                                rowsPerPage *\r\n                                                (page - currentPage)\r\n                                        );\r\n\r\n                                        setCurrentPage(page);\r\n                                    } else if (currentPage > page) {\r\n                                        setIndexOfFirstRow(\r\n                                            (prev) =>\r\n                                                prev -\r\n                                                rowsPerPage *\r\n                                                (currentPage - page)\r\n                                        );\r\n                                        setIndexOfLastRow(\r\n                                            (prev) =>\r\n                                                prev -\r\n                                                rowsPerPage *\r\n                                                (currentPage - page)\r\n                                        );\r\n\r\n                                        setCurrentPage(page);\r\n                                    }\r\n                                }\r\n                            }}\r\n                        >\r\n                            {page}\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div\r\n                    className={`pt-1 ${currentPage === 1 && pageNumbers.length > 2\r\n                            ? ''\r\n                            : 'hidden'\r\n                        }`}\r\n                >\r\n                    ...\r\n                </div>\r\n            </div>\r\n            <div className=\"flex gap-[1px] h-full\">\r\n                <div\r\n                    className={`${arrowCommonStyle} ${currentPage === pageNumbers.length ||\r\n                            pageNumbers.length === 0\r\n                            ? arrowDisabledStyle\r\n                            : ''\r\n                        }`}\r\n                    onClick={() => {\r\n                        if (currentPage < pageNumbers.length) {\r\n                            setIndexOfFirstRow((prev) => prev + rowsPerPage);\r\n                            setIndexOfLastRow((prev) => prev + rowsPerPage);\r\n\r\n                            setCurrentPage((prev) => prev + 1);\r\n                        }\r\n                    }}\r\n                >\r\n                    &rsaquo;\r\n                </div>\r\n                <div\r\n                    className={`${arrowCommonStyle} ${currentPage === pageNumbers.length ||\r\n                            pageNumbers.length === 0\r\n                            ? arrowDisabledStyle\r\n                            : ''\r\n                        }`}\r\n                    onClick={() => {\r\n                        if (currentPage < pageNumbers.length) {\r\n                            setIndexOfFirstRow(\r\n                                (pageNumbers.length - 1) * rowsPerPage\r\n                            );\r\n                            setIndexOfLastRow(pageNumbers.length * rowsPerPage);\r\n\r\n                            setCurrentPage(pageNumbers.length);\r\n                        }\r\n                    }}\r\n                >\r\n                    &raquo;\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport Pagination from './Pagination';\r\n\r\nconst DataTable = ({\r\n    title = '',\r\n    titleUnderlined = false,\r\n    headers,\r\n    body,\r\n    withFilter = false,\r\n    withPagination = false,\r\n    rowsPerPageOptions = [5, 10, 20],\r\n}) => {\r\n    const [filterText, setFilterText] = useState('');\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [indexOfFirstRow, setIndexOfFirstRow] = useState(0);\r\n    const [indexOfLastRow, setIndexOfLastRow] = useState(rowsPerPage);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const filteredBody = body.filter((data) => filterData(data, filterText));\r\n\r\n    function filterData(data, filterText) {\r\n        for (let key in data) {\r\n            for (let header of headers) {\r\n                if (header.isFilterable) {\r\n                    if (header.prop === key) {\r\n                        if (\r\n                            data[key]\r\n                                .toString()\r\n                                .toLowerCase()\r\n                                .includes(filterText.trim().toLowerCase())\r\n                        ) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const pageCount = useMemo(() => {\r\n        return Math.ceil(filteredBody.length / rowsPerPage);\r\n    }, [filteredBody.length, rowsPerPage]);\r\n\r\n    const pageNumbers = useMemo(() => {\r\n        let pageNums = [];\r\n        for (let i = 1; i < pageCount + 1; i++) {\r\n            pageNums.push(i);\r\n        }\r\n        return pageNums;\r\n    }, [pageCount]);\r\n\r\n    useEffect(() => {\r\n        setIndexOfFirstRow(0);\r\n        setIndexOfLastRow(rowsPerPage);\r\n        setCurrentPage(1);\r\n    }, [rowsPerPage]);\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            {title.length > 0 && (\r\n                <h2\r\n                    className={`pb-1 text-lg font-medium ${\r\n                        titleUnderlined ? 'underline underline-offset-4' : ''\r\n                    }`}\r\n                >\r\n                    {title}\r\n                </h2>\r\n            )}\r\n            {withFilter && (\r\n                <div className=\"w-64 ml-auto flex mb-4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter text\"\r\n                        value={filterText}\r\n                        onChange={(e) => setFilterText(e.target.value)}\r\n                        className=\"w-56 p-1 border border-r-0 border-gray-300 focus:border-themeColor focus:outline-none rounded-l-sm\"\r\n                    />\r\n                    <div\r\n                        className=\"w-8 p-1 border border-themeColor flex justify-center items-center text-white bg-themeColor font-bold cursor-pointer rounded-r-sm\"\r\n                        onClick={() => setFilterText('')}\r\n                    >\r\n                        &#215;\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div className=\"mb-4 p-4 border blur-filter rounded-md bg-gray-50 overflow-x-auto\">\r\n                <table className=\"text-sm md:text-base w-full min-w-min overflow-auto\">\r\n                    <thead className=\"border-b border-gray-300\">\r\n                        <tr className=\"h-10\">\r\n                            {headers.map((header) => (\r\n                                <th\r\n                                    className=\"text-start\"\r\n                                    key={crypto.randomUUID()}\r\n                                >\r\n                                    {header.title}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    {filteredBody.length > 0 && (\r\n                        <tbody>\r\n                            {filteredBody\r\n                                .slice(indexOfFirstRow, indexOfLastRow)\r\n                                .map((data) => (\r\n                                    <tr\r\n                                        key={crypto.randomUUID()}\r\n                                        className=\"border-b border-gray-200/50 h-10\"\r\n                                    >\r\n                                        {headers.map((header) => (\r\n                                            <td key={crypto.randomUUID()}>\r\n                                                {data[header.prop]}\r\n                                            </td>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    )}\r\n                    {filteredBody.length === 0 && (\r\n                        <div className=\"h-10 flex items-center\">\r\n                            No data to display\r\n                        </div>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            {withPagination && (\r\n                <div className=\"mb-4\">\r\n                    <label>\r\n                        Rows Per Page&nbsp;&nbsp;\r\n                        <select\r\n                            value={rowsPerPage}\r\n                            onChange={(e) => {\r\n                                setRowsPerPage(parseInt(e.target.value));\r\n                            }}\r\n                            className=\"h-[26px] min-w-[60px] border focus:outline-none\"\r\n                        >\r\n                            {rowsPerPageOptions.map((option) => (\r\n                                <option\r\n                                    value={option}\r\n                                    key={crypto.randomUUID()}\r\n                                >\r\n                                    {option}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            )}\r\n            {/* Pagination */}\r\n            {withPagination && (\r\n                <div className=\"flex justify-end\">\r\n                    <Pagination\r\n                        {...{\r\n                            pageNumbers,\r\n                            currentPage,\r\n                            setCurrentPage,\r\n                            setIndexOfFirstRow,\r\n                            setIndexOfLastRow,\r\n                            rowsPerPage,\r\n                        }}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchData } from '../../../utilities/utilities';\r\nimport DataTable from '../components/DataTable';\r\nimport Modal from '../components/Modal';\r\nimport SessionUpdateForm from '../components/SessionUpdateForm';\r\n\r\nconst Schedule = () => {\r\n    const [body, setBody] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const loggedInUser = useSelector((state) => state.users.loggedInUser);\r\n    const currentDoctorSchedules = useSelector(\r\n        (state) => state.userSchedules.currentDoctorSchedules\r\n    );\r\n\r\n    let headers = [];\r\n\r\n    if (loggedInUser.userRole === 'USER' || null) {\r\n        headers = [\r\n            { prop: 'session', title: 'Session', isFilterable: true },\r\n            {\r\n                prop: 'doctor',\r\n                title: 'Doctor',\r\n                isFilterable: true,\r\n            },\r\n            { prop: 'phone', title: 'Phone', isFilterable: true },\r\n            { prop: 'date', title: 'Date', isFilterable: true },\r\n            { prop: 'time', title: 'Time', isFilterable: true },\r\n            { prop: 'status', title: 'Status' },\r\n        ];\r\n    } else if (loggedInUser.userRole === 'DOCTOR') {\r\n        headers = [\r\n            { prop: 'session', title: 'Session', isFilterable: true },\r\n            {\r\n                prop: 'patient',\r\n                title: 'Patient',\r\n                isFilterable: true,\r\n            },\r\n            { prop: 'phone', title: 'Phone', isFilterable: true },\r\n            { prop: 'date', title: 'Date', isFilterable: true },\r\n            { prop: 'time', title: 'Time', isFilterable: true },\r\n            { prop: 'status', title: 'Status', isFilterable: true },\r\n            // { prop: 'actions', title: 'Actions', isFilterable: true },\r\n        ];\r\n    }\r\n\r\n    const Status = ({ currentState, options, id }) => {\r\n        const [statusState, setStatusState] = useState('');\r\n\r\n        // const bgColor =\r\n        //     statusState === 'Completed'\r\n        //         ? 'bg-themeColor'\r\n        //         : statusState === 'Upcomming'\r\n        //             ? 'bg-yellow-600'\r\n        //             : statusState === 'Ongoing'\r\n        //                 ? 'bg-red-600'\r\n        //                 : 'black';\r\n\r\n        useEffect(() => {\r\n            setStatusState(currentState);\r\n        }, []);\r\n\r\n        return (\r\n            //TODO: status will be updatable like dashboard for only doctor.\r\n            // <Select\r\n            //     name=\"status\"\r\n            //     value={statusState}\r\n            //     onChange={(e) => handleStatusChange(e)}\r\n            //     options={options}\r\n            //     classes={bgColor + ' rounded-md text-white py-1 px-1.5'}\r\n            // />\r\n            <div className='bg-themeColor text-white py-1 px-1.5 w-24'>{statusState}</div>\r\n        );\r\n    };\r\n\r\n    const Actions = ({ data }) => {\r\n        const [open, setOpen] = useState(false);\r\n        return (\r\n            <div>\r\n                <button\r\n                    className=\"bg-themeColor drop-shadow-md text-white px-2.5 rounded-md\"\r\n                    onClick={() => setOpen(true)}\r\n                >\r\n                    Edit\r\n                </button>\r\n\r\n                {open && (\r\n                    <Modal\r\n                        open={open}\r\n                        setOpen={setOpen}\r\n                        extraClasses=\"min-w-[85%] sm:min-w-[60%] rounded-md\"\r\n                    >\r\n                        <SessionUpdateForm\r\n                            currentValues={data}\r\n                            setOpen={setOpen}\r\n                        />\r\n                    </Modal>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    async function fetchSchedules(id) {\r\n        setLoading(true);\r\n        let endpoint = '';\r\n        if (loggedInUser.userRole === 'USER' || null) {\r\n            endpoint = `/api/userSchedules/userschedules/${id}`;\r\n        } else if (loggedInUser.userRole === 'DOCTOR') {\r\n            endpoint = `/api/userSchedules/doctorschedules/${id}`;\r\n        }\r\n\r\n        try {\r\n            const { data } = await fetchData({\r\n                endpoint,\r\n            });\r\n            setLoading(false);\r\n            if (loggedInUser.userRole === 'USER' || null) {\r\n                let bodyData = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                    let doctorDetails = await fetchData({\r\n                        endpoint: `/api/users/${data[i]['doctor_id']}`,\r\n                    });\r\n                    bodyData[i] = {\r\n                        _id: data[i]._id,\r\n                        session: data[i].session_name,\r\n                        doctor: doctorDetails.name,\r\n                        phone: doctorDetails.phone,\r\n                        date: data[i].session_date,\r\n                        time: data[i].session_time,\r\n                        status: <Status currentState={data[i].status} />,\r\n                    };\r\n                }\r\n                setBody(bodyData);\r\n            } else if (loggedInUser.userRole === 'DOCTOR') {\r\n                setBody(() =>\r\n                    data.map((schedule, i) => {\r\n                        return {\r\n                            _id: schedule._id,\r\n                            session: schedule.session_name,\r\n                            patient: schedule.name,\r\n                            phone: schedule.phone,\r\n                            date: schedule.session_date.slice(0, 10),\r\n                            time: schedule.session_time,\r\n                            status: (\r\n                                <Status\r\n                                    currentState={schedule.status}\r\n                                    id={schedule._id}\r\n                                    options={schedule.statusOptions}\r\n                                />\r\n                            ),\r\n                            // actions: <Actions data={data[i]} />,\r\n                        };\r\n                    })\r\n                );\r\n            }\r\n        } catch (e) {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchSchedules(loggedInUser.id);\r\n    }, [currentDoctorSchedules, loggedInUser.id]);\r\n\r\n    if (loading) {\r\n        return <div>Loading, please wait...</div>;\r\n    } else if (body.length === 0) {\r\n        return <div>No data found</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DataTable\r\n                title=\"Scheduled Sessions\"\r\n                titleUnderlined\r\n                headers={headers}\r\n                body={body}\r\n                withFilter\r\n                withPagination\r\n                rowsPerPageOptions={[5, 10, 20, 30, 50, 70, 100]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Schedule;\r\n","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","\r\nexport class FormValidate {\r\n    #isValid = { type: 'green-700', message: '' }\r\n    validate(value, type = 'text') {\r\n        switch (type) {\r\n            case 'text':\r\n                this.#isValid = validateText(value);\r\n                break;\r\n            case 'email':\r\n                this.#isValid = validateEmail(value);\r\n                break;\r\n            case 'password':\r\n                this.#isValid = validatePassword(value);\r\n                break;\r\n            case 'number':\r\n                this.#isValid = validatePhoneNumber(value);\r\n                break;\r\n            default:\r\n                this.#isValid = validateText(value);\r\n        }\r\n\r\n        return this.#isValid;\r\n    }\r\n}\r\n\r\n\r\nconst validateText = (value) => {\r\n    let errMsg = '';\r\n    let type = 'red-700'\r\n\r\n    if (value.length < 3) {\r\n        errMsg = 'Please enter a name with at least 3 letters';\r\n    }\r\n\r\n    if (!(/^[a-zA-Z\\s]+$/.test(value))) {\r\n        errMsg = 'Only alphabets allowed.'\r\n    }\r\n\r\n    if (value === '') {\r\n        errMsg = 'Please enter a valid name.'\r\n    }\r\n\r\n    if (!errMsg) {\r\n        type = 'green-700'\r\n    }\r\n\r\n    return { type: type, message: errMsg }\r\n\r\n}\r\n\r\nconst validateEmail = (value) => {\r\n    let isValid = value.match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    if (isValid === null) {\r\n        return { type: 'red-700', message: 'Please enter a valid email' }\r\n    } else {\r\n        return { type: 'green-700', message: '' }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst validatePassword = (value) => {\r\n    let reg = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$/;\r\n    if (reg.test(value)) {\r\n        return { type: 'green-700', message: '' }\r\n    } else {\r\n        return { type: 'red-700', message: 'Password should have one spechial charecter, one number, one alphabet and at least 8 charecters.' }\r\n    }\r\n}\r\n\r\nconst validatePhoneNumber = (value) => {\r\n    let reg = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    if (reg.test(value)) {\r\n        return { type: 'green-700', message: '' }\r\n    } else {\r\n        return { type: 'red-700', message: 'Please enter a valid phone number.' }\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUserFromUserPanel } from '../../../../store/usersSlice';\r\nimport Input from '../../../../components/form/Input';\r\nimport { FormValidate } from '../../../../utilities/FormValidate';\r\nimport { formSubmitted, updateErrMessages } from '../../../../store/commonDataSlice';\r\n\r\nconst UserUpdateForm = ({ currentValues, setEditMode }) => {\r\n    const [data, setData] = useState(null);\r\n    const { loggedInUser } = useSelector((state) => state.users);\r\n    const { errorMessages, isFormSubmitted } = useSelector((state) => state.common);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        updateErrData(e.target.value, e.target.type, e.target.name)\r\n        setData({ ...data, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    let errs = {}\r\n    function updateErrData(value, type, fieldName) {\r\n        let formVal = new FormValidate();\r\n        let tempErrs = errs //structuredClone(errors)\r\n        let res = formVal.validate(value, type)\r\n\r\n        let errMessge = {\r\n            ...res,\r\n            ...{\r\n                fieldName: fieldName,\r\n                isFormSubmitted: isFormSubmitted,\r\n            }\r\n        }\r\n        tempErrs[fieldName] = errMessge;\r\n        dispatch(updateErrMessages(tempErrs))\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(formSubmitted(true));\r\n        Object.keys(data).map((key) => {\r\n            let tempField = document.querySelector('input[name=\"' + key + '\"]')\r\n            if (tempField) {\r\n                if (tempField.name == 'password') {\r\n                    if (tempField.value) {\r\n                        updateErrData(data[key], tempField.type, tempField.name)\r\n                    } else {\r\n                        let tempErrs = errs\r\n                        delete tempErrs.password;\r\n                        dispatch(updateErrMessages(tempErrs))\r\n                    }\r\n                } else {\r\n                    updateErrData(data[key], tempField.type, tempField.name)\r\n                }\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < Object.values(errs).length; i++) {\r\n            if (Object.values(errs)[i].message) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // create payload\r\n        let payload = {};\r\n        if (data.password.length > 0) {\r\n            payload = {\r\n                id: loggedInUser.id,\r\n                name: data.name,\r\n                phone: data.phone,\r\n                password: data.password,\r\n            };\r\n        } else {\r\n            payload = {\r\n                id: loggedInUser.id,\r\n                name: data.name,\r\n                phone: data.phone,\r\n            };\r\n        }\r\n\r\n        dispatch(updateUserFromUserPanel(payload));\r\n    };\r\n\r\n    useEffect(() => {\r\n        setData({ ...currentValues, confirmPassword: '' });\r\n    }, [currentValues]);\r\n\r\n\r\n\r\n    if (!data) {\r\n        return <div>Please Wait...</div>;\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => handleSubmit(e)}\r\n            className=\" bg-gray-50 overflow-x-auto text-sm md:text-base flex flex-col gap-6\"\r\n        >\r\n            <div className=\"flex flex-col gap-4\">\r\n                <Input\r\n                    classes=\"w-full ml-4 rounded-none p-2\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    label=\"Name\"\r\n                    value={data.name}\r\n                    onChange={(e) => handleChange(e)}\r\n                    errObj={errorMessages.hasOwnProperty('name') && errorMessages.name}\r\n                />\r\n\r\n                <Input\r\n                    classes=\"w-full ml-4 rounded-none p-2\"\r\n                    placeholder=\"Phone\"\r\n                    name=\"phone\"\r\n                    type=\"number\"\r\n                    label=\"Phone\"\r\n                    value={data.phone}\r\n                    onChange={(e) => handleChange(e)}\r\n                    errObj={errorMessages.hasOwnProperty('phone') && errorMessages.phone}\r\n                />\r\n\r\n                <Input\r\n                    classes=\"w-full ml-4 rounded-none p-2\"\r\n                    placeholder=\"Email\"\r\n                    name={'email'}\r\n                    type=\"email\"\r\n                    disable\r\n                    toolTip=\"Email not editable\"\r\n                    toolTipCss='!left-[20%]'\r\n                    label={'Email'}\r\n                    value={data.email}\r\n                    readOnly\r\n                />\r\n                <Input\r\n                    classes=\"w-full ml-4 rounded-none p-2\"\r\n                    placeholder=\"New Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    value={data.password}\r\n                    onChange={(e) => handleChange(e)}\r\n                    errObj={errorMessages.hasOwnProperty('password') && errorMessages.password}\r\n                />\r\n\r\n                {data.password && (\r\n                    <Input\r\n                        classes=\"w-full ml-4 rounded-none p-2\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        label=\"Confirm Password\"\r\n                        value={data.confirmPassword}\r\n                        onChange={(e) => handleChange(e)}\r\n                        errObj={errorMessages.hasOwnProperty('confirmPassword') && errorMessages.confirmPassword}\r\n\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n                <button type=\"submit\" className=\"form__input--submit\">\r\n                    Update\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        setEditMode(false);\r\n                    }}\r\n                    className=\"font-semibold border px-4 py-1  hover:bg-themeColor hover:text-white rounded-md cursor-pointer\"\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UserUpdateForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { fetchData } from '../../../utilities/utilities';\r\nimport UserUpdateForm from '../components/form/UserUpdateForm';\r\n\r\nconst Settings = () => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [currentValues, setCurrentValues] = useState(null);\r\n    const { loggedInUser } = useSelector((state) => state.users);\r\n\r\n    async function fetchUserDetails(id) {\r\n        try {\r\n            const data = await fetchData({\r\n                endpoint: `/api/users/${id}`,\r\n            });\r\n            setCurrentValues({\r\n                name: data.name,\r\n                phone: data.phone,\r\n                email: data.email,\r\n                password: '',\r\n            });\r\n        } catch (e) {\r\n            // write something\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loggedInUser.id) {\r\n            fetchUserDetails(loggedInUser.id);\r\n        }\r\n    }, [loggedInUser.id]);\r\n\r\n    if (!loggedInUser?.id) {\r\n        return (\r\n            <div className=\"p-4\">\r\n                Please{' '}\r\n                <a href=\"/login\" className=\"text-blue-600\">\r\n                    login\r\n                </a>{' '}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!currentValues) {\r\n        return <div className=\"p-4\">Please wait...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-4 \">\r\n            <h2 className=\"pb-2 text-base sm:text-lg font-medium mb-2\">\r\n                {editMode ? 'Edit' : null} Personal Information\r\n            </h2>\r\n            {!editMode ? (\r\n                <div className=\"bg-gray-50 overflow-x-auto text-sm md:text-base flex flex-col gap-6\">\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <div>Name: {currentValues.name}</div>\r\n                        <div>Phone: {currentValues.phone}</div>\r\n                        <div>Email: {currentValues.email}</div>\r\n                        <div>Password: ********</div>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            onClick={() => {\r\n                                setEditMode(true);\r\n                            }}\r\n                            className=\"font-semibold border px-4 py-1 text-white bg-themeColor rounded-md cursor-pointer\"\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            {editMode ? (\r\n                <UserUpdateForm\r\n                    currentValues={currentValues}\r\n                    setEditMode={setEditMode}\r\n                />\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import { Navigate, Route, Routes } from 'react-router-dom';\r\nimport UserPanelSkeleton from '../layouts/user-panel/UserPanelSkeleton';\r\nimport Schedule from '../features/user-panel/pages/Schedule';\r\nimport Settings from '../features/user-panel/pages/Settings';\r\nimport '../styles/UserPanel.css';\r\nimport { addCSS, addScripts } from '../utilities/utilities';\r\n\r\nfunction UserPanel() {\r\n    addCSS(['/assets/front/css/tailwind.css']);\r\n    // addScripts(js);\r\n    return (\r\n        <Routes>\r\n            <Route\r\n                path=\"/\"\r\n                element={\r\n                    <div className=\"text-gray-900\">\r\n                        <UserPanelSkeleton />\r\n                    </div>\r\n                }\r\n            >\r\n                <Route\r\n                    path=\"/\"\r\n                    element={<Navigate to=\"schedule\" replace={true} />}\r\n                />\r\n                <Route path=\"schedule\" element={<Schedule />} />\r\n                <Route path=\"settings\" element={<Settings />} />\r\n            </Route>\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default UserPanel;\r\n"],"names":["ToolTip","title","classes","className","join","Input","label","type","name","value","placeholder","required","readOnly","onBlur","onChange","toolTip","validate","toolTipCss","errObj","message","isFormSubmitted","fieldName","htmlFor","id","autoComplete","classNames","Select","selected","options","defaultValue","defaultOption","addDefaultOption","length","getArrayOptions","getGroupDropdown","getObjectOptions","Object","values","hasOwnProperty","map","optionGroup","i","keys","optionName","index","currentOption","key","_id","option","slice","toUpperCase","children","menus","UserPanelMenus","closeModal","commonStyle","inactiveStyle","activeStyle","link","Icon","to","isActive","onClick","getWindowDimensions","window","width","innerWidth","height","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","open","setOpen","variant","extraClasses","normalStyle","sidebarStyle","ReactDom","document","getElementById","render","setRender","useWindowDimensions","navigate","useNavigate","dispatch","useDispatch","src","process","alt","role","e","preventDefault","alert","console","log","logOut","userLogout","pageNumbers","currentPage","setCurrentPage","setIndexOfFirstRow","setIndexOfLastRow","rowsPerPage","arrowCommonStyle","arrowDisabledStyle","prev","page","titleUnderlined","headers","body","withFilter","withPagination","rowsPerPageOptions","filterText","setFilterText","setRowsPerPage","indexOfFirstRow","indexOfLastRow","filteredBody","filter","data","header","isFilterable","prop","toString","toLowerCase","includes","trim","filterData","pageCount","useMemo","Math","ceil","pageNums","push","target","crypto","randomUUID","parseInt","setBody","loading","setLoading","loggedInUser","useSelector","state","users","currentDoctorSchedules","userSchedules","userRole","Status","currentState","statusState","setStatusState","endpoint","fetchData","bodyData","doctorDetails","session","session_name","doctor","phone","date","session_date","time","session_time","status","schedule","patient","statusOptions","fetchSchedules","_classPrivateFieldBase","receiver","privateKey","prototype","call","TypeError","_classPrivateFieldKey","FormValidate","this","validateText","validateEmail","validatePassword","validatePhoneNumber","errMsg","test","match","currentValues","setEditMode","setData","common","errorMessages","handleChange","updateErrData","errs","formVal","tempErrs","res","errMessge","updateErrMessages","confirmPassword","onSubmit","formSubmitted","tempField","querySelector","password","payload","updateUserFromUserPanel","handleSubmit","disable","email","editMode","setCurrentValues","fetchUserDetails","href","addCSS","path","element","replace"],"sourceRoot":""}